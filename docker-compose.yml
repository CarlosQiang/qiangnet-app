version: '3.8'

services:
  postgres:
    image: postgres:15-alpine
    container_name: qiangnet-postgres
    restart: unless-stopped
    environment:
      POSTGRES_DB: qiangnet_db
      POSTGRES_USER: qiangnet_user
      POSTGRES_PASSWORD: ${DB_PASSWORD:-qiangnet_secure_2024}
      POSTGRES_INITDB_ARGS: "--encoding=UTF-8 --lc-collate=C --lc-ctype=C"
    volumes:
      - postgres_data:/var/lib/postgresql/data
      - ./scripts/init-db.sql:/docker-entrypoint-initdb.d/init-db.sql:ro
    ports:
      - "5432:5432"
    networks:
      - qiangnet-network
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U qiangnet_user -d qiangnet_db"]
      interval: 10s
      timeout: 5s
      retries: 5
      start_period: 30s

  api:
    build:
      context: ../qiangnet-api-backend
      dockerfile: Dockerfile
    container_name: qiangnet-api
    restart: unless-stopped
    environment:
      NODE_ENV: production
      PORT: 3001
      DB_HOST: postgres
      DB_PORT: 5432
      DB_NAME: qiangnet_db
      DB_USER: qiangnet_user
      DB_PASSWORD: ${DB_PASSWORD:-qiangnet_secure_2024}
      JWT_SECRET: ${JWT_SECRET:-qiangnet_jwt_super_secret_key_2024_production}
      JWT_EXPIRES_IN: 24h
      JWT_REFRESH_EXPIRES_IN: 7d
      CORS_ORIGIN: http://localhost:3000,http://frontend:3000
    ports:
      - "3001:3001"
    depends_on:
      postgres:
        condition: service_healthy
    networks:
      - qiangnet-network
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:3001/api/health"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 40s
    volumes:
      - api_logs:/app/logs
      - api_uploads:/app/uploads

  frontend:
    build:
      context: .
      dockerfile: Dockerfile
    container_name: qiangnet-frontend
    restart: unless-stopped
    ports:
      - "3000:3000"
    environment:
      - NODE_ENV=production
      - NEXT_PUBLIC_API_URL=http://api:3001/api
      - NEXT_PUBLIC_APP_NAME=QiangNet
      - NEXT_PUBLIC_ENVIRONMENT=production
      - JWT_SECRET=${JWT_SECRET:-qiangnet_jwt_super_secret_key_2024_production}
    networks:
      - qiangnet-network
    depends_on:
      - api
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:3000/api/health"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 40s

  nginx:
    image: nginx:alpine
    container_name: qiangnet-nginx
    ports:
      - "80:80"
      - "443:443"
    volumes:
      - ./nginx/nginx.conf:/etc/nginx/nginx.conf:ro
      - ./nginx/ssl:/etc/nginx/ssl:ro
      - nginx_cache:/var/cache/nginx
    depends_on:
      - frontend
      - api
    restart: unless-stopped
    networks:
      - qiangnet-network
    healthcheck:
      test: ["CMD", "wget", "--quiet", "--tries=1", "--spider", "http://localhost/health"]
      interval: 30s
      timeout: 10s
      retries: 3

volumes:
  postgres_data:
    driver: local
  api_logs:
    driver: local
  api_uploads:
    driver: local
  nginx_cache:
    driver: local

networks:
  qiangnet-network:
    driver: bridge
